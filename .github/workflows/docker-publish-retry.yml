name: Build and Push Docker Extension (with retry)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # Run at 2 AM UTC daily when rate limits are lower

env:
  IMAGE_NAME: remote-docker
  REGISTRY: docker.io
  IMAGE_OWNER: anubissbe

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for rate limit reset if needed
        run: |
          echo "Waiting 30 seconds to avoid rate limits..."
          sleep 30

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.IMAGE_OWNER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image (with retry)
        uses: nick-fields/retry@v2.9.0
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_wait_seconds: 300  # Wait 5 minutes between retries
          command: |
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --push \
              --tag ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:latest \
              --tag ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
              --cache-from type=gha \
              --cache-to type=gha,mode=max \
              .

      - name: Update Docker Hub description
        if: success()
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ env.IMAGE_OWNER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}
          readme-filepath: ./README.md